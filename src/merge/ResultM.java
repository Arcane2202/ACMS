/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package merge;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Arcane
 */
public class ResultM extends javax.swing.JFrame {

    int rowIndx = -1;
    DefaultTableModel mod,model;
    Connection con;
    String task = "Edit";

    /**
     * Creates new form ResultM
     */
    public ResultM() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);

        try {
            con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=ACMS;selectMethod=cursor", "sa", "123456");
        } catch (SQLException ex) {
            Logger.getLogger(ResultM.class.getName()).log(Level.SEVERE, null, ex);
        }

        populateTable();
        populateExam();
        populateStudent();
        saveResult.setVisible(false);
        cancelResult.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel9 = new javax.swing.JPanel();
        cancelResult = new javax.swing.JButton();
        resultMarks = new javax.swing.JTextField();
        resultId = new javax.swing.JTextField();
        idlab = new javax.swing.JLabel();
        editResult = new javax.swing.JButton();
        saveResult = new javax.swing.JButton();
        returnResult = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        addResult = new javax.swing.JButton();
        resultExam = new javax.swing.JComboBox<>();
        resultStudent = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        resultTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(1374, 792));
        jPanel1.setName(""); // NOI18N
        jPanel1.setOpaque(false);
        jPanel1.setPreferredSize(new java.awt.Dimension(1374, 792));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 153, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel16.setBackground(new java.awt.Color(0, 153, 255));

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 350, 50));

        jTabbedPane2.setBackground(new java.awt.Color(0, 153, 255));
        jTabbedPane2.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        jPanel9.setBackground(new java.awt.Color(0, 153, 255));

        cancelResult.setBackground(new java.awt.Color(0, 168, 247));
        cancelResult.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        cancelResult.setText("Cancel");
        cancelResult.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cancelResult.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelResultActionPerformed(evt);
            }
        });

        resultMarks.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N

        resultId.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        resultId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultIdActionPerformed(evt);
            }
        });

        idlab.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        idlab.setText("ID                    :");

        editResult.setBackground(new java.awt.Color(0, 168, 247));
        editResult.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        editResult.setText("Edit");
        editResult.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        editResult.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editResultActionPerformed(evt);
            }
        });

        saveResult.setBackground(new java.awt.Color(0, 168, 247));
        saveResult.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        saveResult.setText("Save");
        saveResult.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        saveResult.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveResultActionPerformed(evt);
            }
        });

        returnResult.setBackground(new java.awt.Color(0, 168, 247));
        returnResult.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        returnResult.setText("Return");
        returnResult.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        returnResult.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        returnResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnResultActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        jLabel8.setText("Exam ID         :");

        jLabel9.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        jLabel9.setText("Student ID     :");

        addResult.setBackground(new java.awt.Color(0, 168, 247));
        addResult.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        addResult.setText("Add");
        addResult.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addResult.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addResultActionPerformed(evt);
            }
        });

        resultExam.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        resultExam.setBorder(null);
        resultExam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultExamActionPerformed(evt);
            }
        });

        resultStudent.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        resultStudent.setBorder(null);
        resultStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultStudentActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        jLabel10.setText("Marks            :");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(cancelResult, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveResult, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(returnResult, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(96, 96, 96))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(addResult, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(editResult, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(53, 53, 53))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resultMarks, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(idlab, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resultId, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 27, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resultExam, 0, 186, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resultStudent, 0, 186, Short.MAX_VALUE)))
                .addGap(28, 28, 28))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(208, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idlab, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resultId, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resultExam, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resultStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(resultMarks, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(154, 154, 154)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveResult)
                    .addComponent(cancelResult))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editResult)
                    .addComponent(addResult))
                .addGap(41, 41, 41)
                .addComponent(returnResult)
                .addGap(40, 40, 40))
        );

        jTabbedPane2.addTab("tab3", jPanel9);

        jPanel2.add(jTabbedPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -4, 360, 800));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 350, 800));

        jPanel15.setBackground(new java.awt.Color(0, 168, 247));

        title.setFont(new java.awt.Font("Bahnschrift", 1, 24)); // NOI18N
        title.setForeground(new java.awt.Color(255, 255, 255));
        title.setText("Result Management");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(641, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(title)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 70, 1030, 50));

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        resultTable.setAutoCreateRowSorter(true);
        resultTable.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        resultTable.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        resultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        resultTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        resultTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        resultTable.setGridColor(new java.awt.Color(255, 255, 255));
        resultTable.setRowHeight(70);
        resultTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resultTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(resultTable);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 996, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(918, 918, 918))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(141, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab4", jPanel6);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 90, 1010, 700));

        jLabel1.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        jLabel1.setText("Search:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 10, 100, 50));

        jTextField1.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 10, 190, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelResultActionPerformed
        // TODO add your handling code here:
        //jTabbedPane1.setSelectedIndex(1);
        //populateProfile();
        editResult.setVisible(true);
        addResult.setVisible(true);
        returnResult.setVisible(true);
        saveResult.setVisible(false);
        cancelResult.setVisible(false);
        resultId.setText("");
        resultExam.setSelectedIndex(0);
        resultStudent.setSelectedIndex(0);
        resultMarks.setText("");
        resultId.setVisible(true);
        idlab.setVisible(true);
        resultMarks.setEditable(false);
        resultStudent.setEnabled(false);
        resultStudent.setEnabled(false);
    }//GEN-LAST:event_cancelResultActionPerformed

    private void resultIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_resultIdActionPerformed

    private void editResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editResultActionPerformed
        // TODO add your handling code here:
        task = "Edit";
        editResult.setVisible(false);
        addResult.setVisible(false);
        returnResult.setVisible(false);
        saveResult.setVisible(true);
        cancelResult.setVisible(true);
        resultId.setVisible(false);
        idlab.setVisible(false);

        resultExam.setEnabled(true);
        resultStudent.setEnabled(true);
        resultMarks.setEditable(true);
    }//GEN-LAST:event_editResultActionPerformed

    private void saveResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveResultActionPerformed
        // TODO add your handling code here:
        String id = resultId.getText();
        String exid = resultExam.getSelectedItem().toString();
        String stid = resultStudent.getSelectedItem().toString();
        String mark = resultMarks.getText().toString();
        Float mak = Float.parseFloat(mark);
        String grad = "";
        if (mak >= 80) {
            grad = "A+";
        } else if (mak >= 70) {
            grad = "A";
        } else if (mak >= 60) {
            grad = "B+";
        } else if (mak >= 50) {
            grad = "B";
        } else if (mak >= 40) {
            grad = "C";
        } else if (mak >= 33) {
            grad = "D";
        } else {
            grad = "F";
        }
        if (task.equals("Edit")) {
            try {
                String quer = "UPDATE Results set exam_id=?,student_id=?,result_obtained_marks=?,result_grade=? WHERE result_id=?";
                PreparedStatement statement = con.prepareStatement(quer);
                statement.setString(1, exid);
                statement.setString(2, stid);
                statement.setString(3, mark);
                statement.setString(4, grad);
                statement.setString(5, id);
                statement.executeUpdate();
                populateTable();
                JOptionPane.showMessageDialog(this, "Successfully Updated");
                editResult.setVisible(true);
                addResult.setVisible(true);
                returnResult.setVisible(true);
                saveResult.setVisible(false);
                cancelResult.setVisible(false);
                resultId.setText("");
                resultExam.setSelectedIndex(0);
                resultStudent.setSelectedIndex(0);
                resultMarks.setText("");
                resultId.setVisible(true);
                idlab.setVisible(true);
                resultMarks.setEditable(false);
                resultStudent.setEnabled(false);
                resultStudent.setEnabled(false);

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex);
            }
        } else {

            try {
                String quer = "INSERT INTO RESULTS VALUES(?,?,?,?)";
                PreparedStatement statement = con.prepareStatement(quer);
                statement.setString(1, exid);
                statement.setString(2, stid);
                statement.setString(3, mark);
                statement.setString(4, grad);
                statement.executeUpdate();
                populateTable();
                JOptionPane.showMessageDialog(this, "Successfully Added");
                editResult.setVisible(true);
                addResult.setVisible(true);
                returnResult.setVisible(true);
                saveResult.setVisible(false);
                cancelResult.setVisible(false);
                resultId.setText("");
                resultExam.setSelectedIndex(0);
                resultStudent.setSelectedIndex(0);
                resultMarks.setText("");
                resultId.setVisible(true);
                idlab.setVisible(true);
                resultMarks.setEditable(false);
                resultStudent.setEnabled(false);
                resultStudent.setEnabled(false);

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex);
            }
        }
    }//GEN-LAST:event_saveResultActionPerformed

    private void returnResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnResultActionPerformed
        // TODO add your handling code here:
        adminLayout obj = new adminLayout();
        obj.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_returnResultActionPerformed

    private void resultTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resultTableMouseClicked
        // TODO add your handling code here:
        mod = (DefaultTableModel) resultTable.getModel();
        rowIndx = resultTable.getSelectedRow();
        resultId.setText(mod.getValueAt(rowIndx, 0).toString());
        String xmSelect = mod.getValueAt(rowIndx, 1).toString();
        for (int i = 0; i < resultExam.getItemCount(); i++) {
            if (resultExam.getItemAt(i).toString().equals(xmSelect)) {
                resultExam.setSelectedIndex(i);
                break;
            }
        }

        String stSelect = mod.getValueAt(rowIndx, 2).toString();
        for (int i = 0; i < resultStudent.getItemCount(); i++) {
            if (resultStudent.getItemAt(i).toString().equals(stSelect)) {
                resultStudent.setSelectedIndex(i);
                break;
            }
        }
        resultMarks.setText(mod.getValueAt(rowIndx, 3).toString());
    }//GEN-LAST:event_resultTableMouseClicked

    private void addResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addResultActionPerformed
        // TODO add your handling code here:
        task = "Add";
        editResult.setVisible(false);
        addResult.setVisible(false);
        returnResult.setVisible(false);
        saveResult.setVisible(true);
        cancelResult.setVisible(true);
        resultId.setVisible(false);
        idlab.setVisible(false);

        resultExam.setEnabled(true);
        resultStudent.setEnabled(true);
        resultMarks.setEditable(true);

        resultId.setText("");
        resultExam.setSelectedIndex(0);
        resultStudent.setSelectedIndex(0);
        resultMarks.setText("");
    }//GEN-LAST:event_addResultActionPerformed

    private void resultExamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultExamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_resultExamActionPerformed

    private void resultStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultStudentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_resultStudentActionPerformed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        // TODO add your handling code here:
        String s = jTextField1.getText();
        searchRecordApprove(s);
    }//GEN-LAST:event_jTextField1KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResultM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResultM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResultM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResultM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ResultM().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addResult;
    private javax.swing.JButton cancelResult;
    private javax.swing.JButton editResult;
    private javax.swing.JLabel idlab;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JComboBox<String> resultExam;
    private javax.swing.JTextField resultId;
    private javax.swing.JTextField resultMarks;
    private javax.swing.JComboBox<String> resultStudent;
    private javax.swing.JTable resultTable;
    private javax.swing.JButton returnResult;
    private javax.swing.JButton saveResult;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
public void populateTable() {
        try {
            String quer = "SELECT * FROM RESULTS";
            ResultSet resultSet;
            PreparedStatement statement = con.prepareStatement(quer);
            resultSet = statement.executeQuery();
            resultTable.setModel(DbUtils.resultSetToTableModel(resultSet));
            searchRecordApprove("");

        } catch (SQLException ex) {
            Logger.getLogger(ResultM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void populateExam() {
        try {
            // Your database connections 
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM Exams");
            while (rs.next()) {
                resultExam.addItem(rs.getString(1));
            }
            //con.close();
        } catch (SQLException e) {
            System.out.println("Error" + e);
        }
    }

    private void populateStudent() {
        try {
            // Your database connections 
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM STUDENTS");
            while (rs.next()) {
                resultStudent.addItem(rs.getString(1));
            }
            //con.close();
        } catch (SQLException e) {
            System.out.println("Error" + e);
        }
    }
    public void searchRecordApprove(String str){
        model = (DefaultTableModel) resultTable.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(model);
        resultTable.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter("(?i)" + str));

    }

}
