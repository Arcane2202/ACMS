/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package merge;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author tanve
 */
public class BranchM extends javax.swing.JFrame {

    int rowIndx = -1;
    DefaultTableModel mod,model;
    Connection con;
    String task = "Edit";

    /**
     * Creates new form BranchM
     */
    public BranchM() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);

        try {
            con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=ACMS;selectMethod=cursor", "sa", "123456");
        } catch (SQLException ex) {
            Logger.getLogger(BranchM.class.getName()).log(Level.SEVERE, null, ex);
        }

        populateTable();
        populateBranch();
        populateDistrict();

        saveBranch.setVisible(false);
        cancelBranch.setVisible(false);
        branchManager.setEnabled(false);
        branchDistrict.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel9 = new javax.swing.JPanel();
        branchAddress = new javax.swing.JTextField();
        branchName = new javax.swing.JTextField();
        branchId = new javax.swing.JTextField();
        idlab = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cancelBranch = new javax.swing.JButton();
        editBranch = new javax.swing.JButton();
        saveBranch = new javax.swing.JButton();
        returnBranch = new javax.swing.JButton();
        branchDistrict = new javax.swing.JComboBox<>();
        branchManager = new javax.swing.JComboBox<>();
        addBranch = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        branchTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(1374, 792));
        jPanel1.setName(""); // NOI18N
        jPanel1.setOpaque(false);
        jPanel1.setPreferredSize(new java.awt.Dimension(1374, 792));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 153, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel16.setBackground(new java.awt.Color(0, 153, 255));

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 350, 50));

        jTabbedPane2.setBackground(new java.awt.Color(0, 153, 255));
        jTabbedPane2.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        jPanel9.setBackground(new java.awt.Color(0, 153, 255));

        branchAddress.setEditable(false);
        branchAddress.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        branchAddress.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        branchAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                branchAddressActionPerformed(evt);
            }
        });

        branchName.setEditable(false);
        branchName.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        branchName.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        branchName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                branchNameActionPerformed(evt);
            }
        });

        branchId.setEditable(false);
        branchId.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        branchId.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        branchId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                branchIdActionPerformed(evt);
            }
        });

        idlab.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        idlab.setText("ID           :");

        jLabel2.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        jLabel2.setText("Name    :");

        jLabel3.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        jLabel3.setText("Address:");

        jLabel4.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        jLabel4.setText("District  :");

        jLabel5.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        jLabel5.setText("Manager:");

        cancelBranch.setBackground(new java.awt.Color(0, 168, 247));
        cancelBranch.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        cancelBranch.setText("Cancel");
        cancelBranch.setAutoscrolls(true);
        cancelBranch.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cancelBranch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelBranch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBranchActionPerformed(evt);
            }
        });

        editBranch.setBackground(new java.awt.Color(0, 168, 247));
        editBranch.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        editBranch.setText("Edit");
        editBranch.setAutoscrolls(true);
        editBranch.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        editBranch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editBranch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBranchActionPerformed(evt);
            }
        });

        saveBranch.setBackground(new java.awt.Color(0, 168, 247));
        saveBranch.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        saveBranch.setText("Save");
        saveBranch.setAutoscrolls(true);
        saveBranch.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        saveBranch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveBranch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBranchActionPerformed(evt);
            }
        });

        returnBranch.setBackground(new java.awt.Color(0, 168, 247));
        returnBranch.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        returnBranch.setText("Return");
        returnBranch.setAutoscrolls(true);
        returnBranch.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        returnBranch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        returnBranch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBranchActionPerformed(evt);
            }
        });

        branchDistrict.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        branchDistrict.setBorder(null);
        branchDistrict.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                branchDistrictActionPerformed(evt);
            }
        });

        branchManager.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        branchManager.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        addBranch.setBackground(new java.awt.Color(0, 168, 247));
        addBranch.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        addBranch.setText("Add");
        addBranch.setAutoscrolls(true);
        addBranch.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addBranch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addBranch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBranchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cancelBranch, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBranch, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(saveBranch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editBranch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(idlab)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(branchId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(branchName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(branchAddress, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(branchDistrict, javax.swing.GroupLayout.Alignment.LEADING, 0, 186, Short.MAX_VALUE)
                            .addComponent(branchManager, javax.swing.GroupLayout.Alignment.LEADING, 0, 186, Short.MAX_VALUE)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(returnBranch, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(branchId, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idlab, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(branchName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(branchAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(branchDistrict, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(branchManager, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(137, 137, 137)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveBranch)
                    .addComponent(cancelBranch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editBranch)
                    .addComponent(addBranch))
                .addGap(52, 52, 52)
                .addComponent(returnBranch)
                .addGap(92, 92, 92))
        );

        jTabbedPane2.addTab("tab3", jPanel9);

        jPanel2.add(jTabbedPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -4, 360, 800));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 350, 800));

        jPanel15.setBackground(new java.awt.Color(0, 168, 247));

        title.setFont(new java.awt.Font("Bahnschrift", 1, 24)); // NOI18N
        title.setForeground(new java.awt.Color(255, 255, 255));
        title.setText("Branch Management");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(641, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(title)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 70, 1030, 60));

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        branchTable.setAutoCreateRowSorter(true);
        branchTable.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        branchTable.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        branchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        branchTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        branchTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        branchTable.setGridColor(new java.awt.Color(255, 255, 255));
        branchTable.setRowHeight(70);
        branchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                branchTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(branchTable);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 996, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(918, 918, 918))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(141, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab4", jPanel6);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 90, 1010, 700));

        jLabel1.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        jLabel1.setText("Search:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 10, 100, 50));

        jTextField1.setFont(new java.awt.Font("Bahnschrift", 0, 20)); // NOI18N
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 10, 190, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBranchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBranchActionPerformed
        // TODO add your handling code here:
        //jTabbedPane1.setSelectedIndex(1);
        //populateProfile();
        editBranch.setVisible(true);
        addBranch.setVisible(true);
        returnBranch.setVisible(true);
        saveBranch.setVisible(false);
        cancelBranch.setVisible(false);
        branchId.setText("");
        branchName.setText("");
        branchAddress.setText("");
        branchDistrict.setSelectedIndex(0);
        branchManager.setSelectedIndex(0);
        branchId.setVisible(true);
        idlab.setVisible(true);
        branchName.setEditable(false);
        branchAddress.setEditable(false);
        branchManager.setEnabled(false);
        branchDistrict.setEnabled(false);
    }//GEN-LAST:event_cancelBranchActionPerformed

    private void branchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_branchTableMouseClicked
        // TODO add your handling code here:
        mod = (DefaultTableModel) branchTable.getModel();
        rowIndx = branchTable.getSelectedRow();
        branchId.setText(mod.getValueAt(rowIndx, 0).toString());
        branchName.setText(mod.getValueAt(rowIndx, 1).toString());
        branchAddress.setText(mod.getValueAt(rowIndx, 2).toString());
        String disSelect = mod.getValueAt(rowIndx, 3).toString();
        for (int i = 0; i < branchDistrict.getItemCount(); i++) {
            if (branchDistrict.getItemAt(i).toString().equals(disSelect)) {
                branchDistrict.setSelectedIndex(i);
                break;
            }
        }
        String manSelect = mod.getValueAt(rowIndx, 4).toString();
        for (int i = 0; i < branchManager.getItemCount(); i++) {
            if (branchManager.getItemAt(i).toString().equals(manSelect)) {
                branchManager.setSelectedIndex(i);
                break;
            }
        }
    }//GEN-LAST:event_branchTableMouseClicked

    private void branchNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_branchNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_branchNameActionPerformed

    private void branchAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_branchAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_branchAddressActionPerformed

    private void editBranchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBranchActionPerformed
        // TODO add your handling code here:
        task = "Edit";
        editBranch.setVisible(false);
        addBranch.setVisible(false);
        returnBranch.setVisible(false);
        saveBranch.setVisible(true);
        cancelBranch.setVisible(true);
        branchId.setVisible(false);
        idlab.setVisible(false);

        branchName.setEditable(true);
        branchAddress.setEditable(true);
        branchManager.setEnabled(true);
        branchDistrict.setEnabled(true);
    }//GEN-LAST:event_editBranchActionPerformed

    private void saveBranchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBranchActionPerformed
        // TODO add your handling code here:

        String id = branchId.getText();
        String name = branchName.getText().toString();
        String adrs = branchAddress.getText().toString();
        String dist = branchDistrict.getSelectedItem().toString();
        String man = branchManager.getSelectedItem().toString();
        String manid = "";
        try {
            // Your database connections 
            Statement st = con.createStatement();

            String quer = "SELECT * FROM MANAGERS WHERE manager_name=?";
            PreparedStatement statement = con.prepareStatement(quer);
            statement.setString(1, man);
            ResultSet rs = statement.executeQuery();
            while (rs.next()) {
                manid = rs.getString(1);
            }
            //con.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e);
        }

        if (task.equals("Edit")) {
            try {
                String quer = "UPDATE BRANCHES set branch_name=?,branch_address=?,branch_district=?,manager_id=? WHERE branch_id=?";
                PreparedStatement statement = con.prepareStatement(quer);
                statement.setString(1, name);
                statement.setString(2, adrs);
                statement.setString(3, dist);
                statement.setString(4, manid);
                statement.setString(5, id);
                statement.executeUpdate();
                populateTable();
                JOptionPane.showMessageDialog(this, "Successfully Updated");
                editBranch.setVisible(true);
                addBranch.setVisible(true);
                returnBranch.setVisible(true);
                saveBranch.setVisible(false);
                cancelBranch.setVisible(false);
                branchId.setText("");
                branchName.setText("");
                branchAddress.setText("");
                branchDistrict.setSelectedIndex(0);
                branchManager.setSelectedIndex(0);
                branchId.setVisible(true);
                idlab.setVisible(true);
                branchName.setEditable(false);
                branchAddress.setEditable(false);
                branchManager.setEnabled(false);
                branchDistrict.setEnabled(false);

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex);
            }
        } else {

            try {
                String quer = "INSERT INTO BRANCHES VALUES(?,?,?,?)";
                PreparedStatement statement = con.prepareStatement(quer);
                statement.setString(1, name);
                statement.setString(2, adrs);
                statement.setString(3, dist);
                statement.setString(4, manid);
                statement.executeUpdate();
                populateTable();
                JOptionPane.showMessageDialog(this, "Successfully Added");
                editBranch.setVisible(true);
                addBranch.setVisible(true);
                returnBranch.setVisible(true);
                saveBranch.setVisible(false);
                cancelBranch.setVisible(false);
                branchId.setText("");
                branchName.setText("");
                branchAddress.setText("");
                branchDistrict.setSelectedIndex(0);
                branchManager.setSelectedIndex(0);
                branchId.setVisible(true);
                idlab.setVisible(true);
                branchName.setEditable(false);
                branchAddress.setEditable(false);
                branchManager.setEnabled(false);
                branchDistrict.setEnabled(false);

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex);
            }
        }
    }//GEN-LAST:event_saveBranchActionPerformed

    private void returnBranchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBranchActionPerformed
        // TODO add your handling code here:
        adminLayout obj = new adminLayout();
        obj.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_returnBranchActionPerformed

    private void branchIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_branchIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_branchIdActionPerformed

    private void addBranchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBranchActionPerformed
        // TODO add your handling code here:
        editBranch.setVisible(false);
        addBranch.setVisible(false);
        returnBranch.setVisible(false);
        saveBranch.setVisible(true);
        cancelBranch.setVisible(true);
        task = "Add";
        branchId.setText("");
        branchName.setText("");
        branchAddress.setText("");
        branchDistrict.setSelectedIndex(0);
        branchManager.setSelectedIndex(0);
        branchId.setVisible(false);
        idlab.setVisible(false);

        branchName.setEditable(true);
        branchAddress.setEditable(true);
        branchManager.setEnabled(true);
        branchDistrict.setEnabled(true);
    }//GEN-LAST:event_addBranchActionPerformed

    private void branchDistrictActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_branchDistrictActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_branchDistrictActionPerformed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        // TODO add your handling code here:
        String s = jTextField1.getText();
        searchRecordApprove(s);
    }//GEN-LAST:event_jTextField1KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BranchM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BranchM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BranchM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BranchM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BranchM().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBranch;
    private javax.swing.JTextField branchAddress;
    private javax.swing.JComboBox<String> branchDistrict;
    private javax.swing.JTextField branchId;
    private javax.swing.JComboBox<String> branchManager;
    private javax.swing.JTextField branchName;
    private javax.swing.JTable branchTable;
    private javax.swing.JButton cancelBranch;
    private javax.swing.JButton editBranch;
    private javax.swing.JLabel idlab;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton returnBranch;
    private javax.swing.JButton saveBranch;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables

    public void populateTable() {
        try {
            String quer = "SELECT branch_id,branch_name,branch_address,branch_district,manager_name FROM BRANCHES B INNER JOIN MANAGERS M ON M.manager_id=B.manager_id";
            ResultSet resultSet;
            PreparedStatement statement = con.prepareStatement(quer);
            resultSet = statement.executeQuery();
            branchTable.setModel(DbUtils.resultSetToTableModel(resultSet));
            searchRecordApprove("");
        } catch (SQLException ex) {
            Logger.getLogger(studentLayout.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void populateBranch() {
        try {
            // Your database connections 
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM MANAGERS");
            while (rs.next()) {
                branchManager.addItem(rs.getString(2));
            }
            //con.close();
        } catch (SQLException e) {
            System.out.println("Error" + e);
        }
    }

    private void populateDistrict() {
        branchDistrict.addItem("DHAKA");
        branchDistrict.addItem("CHITTAGONG");
        branchDistrict.addItem("SYLHET");
        branchDistrict.addItem("BARISAL");
        branchDistrict.addItem("KHULNA");
        branchDistrict.addItem("MYMENSING");
        branchDistrict.addItem("RAJSHAHI");
        branchDistrict.addItem("RANGPUR");
    }
    public void searchRecordApprove(String str){
        model = (DefaultTableModel) branchTable.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(model);
        branchTable.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter("(?i)" + str));

    }
}
